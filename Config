from flask import Flask
from celery import Celery
import config

config = config.ProductionConfig
cache = None
celery = None

def make_celery(app: Flask) -> Celery:
    celery = Celery(app.import_name, backend=app.config['CELERY_RESULT_BACKEND'],
                    broker=app.config['CELERY_BROKER_URL'])
    celery.conf.update(app.config)
    # Ensure Celery tasks run within the Flask app context.
    class ContextTask(celery.Task):
        def __call__(self, *args, **kwargs):
            with app.app_context():
                return self.run(*args, **kwargs)
    celery.Task = ContextTask
    return celery

def create_app() -> Flask:
    app = Flask(__name__, template_folder="templates")
    # Initialize Flask-Caching (if you want to cache views, etc.)
    cache.init_app(app)

    # Register Blueprint routes
    from .routes import main_bp
    app.register_blueprint(main_bp)

    # Setup Celery
    global celery
    celery = make_celery(app)

    return app
