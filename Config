import os
from typing import Optional

class Config:
    """Base configuration class."""
    SECRET_KEY: str = os.environ.get('SECRET_KEY', 'a-very-secure-secret-key')
    CELERY_BROKER_URL: str = os.environ.get('CELERY_BROKER_URL', 'redis://redis:6379/0')
    CELERY_RESULT_BACKEND: str = os.environ.get('CELERY_RESULT_BACKEND', 'redis://redis:6379/0')
    REDIS_URL: str = os.environ.get('REDIS_URL', 'redis://redis:6379/0')
    TABLEAU_SERVER_URL: str = os.environ.get('TABLEAU_SERVER_URL', '')
    TABLEAU_API_VERSION: str = os.environ.get('TABLEAU_API_VERSION', '3.10')
    TABLEAU_USERNAME: Optional[str] = os.environ.get('TABLEAU_USERNAME')
    TABLEAU_PASSWORD: Optional[str] = os.environ.get('TABLEAU_PASSWORD')
    EXCEL_FILE_PATH: str = os.environ.get('EXCEL_FILE_PATH', '/data/large_file.xlsx')
    CACHE_TIMEOUT: int = 3600  # Cache timeout in seconds (1 hour)

class DevelopmentConfig(Config):
    """Development-specific configuration."""
    DEBUG: bool = True

class ProductionConfig(Config):
    """Production-specific configuration."""
    DEBUG: bool = False
    GUNICORN_WORKERS: int = int(os.environ.get('GUNICORN_WORKERS', '4'))

class TestingConfig(Config):
    """Testing-specific configuration."""
    TESTING: bool = True
    CELERY_BROKER_URL: str = 'redis://localhost:6379/1'
    CELERY_RESULT_BACKEND: str = 'redis://localhost:6379/1'
    REDIS_URL: str = 'redis://localhost:6379/1'
